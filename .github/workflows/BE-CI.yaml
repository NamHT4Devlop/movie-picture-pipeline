name: Backend Continuous Integration Workflow

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - development
    paths:
      - "backend/**"

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pipenv and dependencies
        run: |
          pip install pipenv flake8 pytest
          pipenv install
        working-directory: ./backend

  lint:
    name: Backend Linting Jobs
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Run lint with pipenv
        run: |
          pipenv --version
          pipenv run lint
        working-directory: ./backend

  test:
    name: Backend Run Tests
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Run tests with pipenv
        run: |
          pipenv --version
          pipenv run test
        working-directory: ./backend

  build:
    name: Build and Push Image to ECR
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files in the directory
        run: ls -R ./backend

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pipenv and dependencies
        run: |
          pip install pipenv flake8 pytest
          pipenv install
        working-directory: ./backend

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Debug AWS Credentials
        run: |
          echo "Validating AWS Credentials..."
          aws sts get-caller-identity
          echo "AWS Credentials are valid."
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Build and Tag Docker Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Docker image: $REGISTRY/$REPOSITORY:$IMAGE_TAG"
          docker build --build-arg PYTHON_VERSION=3.10 -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f ./backend/Dockerfile ./backend
          docker images

      - name: Push Docker Image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/backend:${{ github.sha }}

      - name: Cache Docker Image
        uses: actions/cache@v3
        with:
          path: ~/.docker
          key: docker-${{ github.sha }}-backend
          restore-keys: |
            docker-${{ github.sha }}-
